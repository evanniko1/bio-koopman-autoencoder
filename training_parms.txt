# Command lines to test code and avoid multiple copy-pasting

# The objective of the examples is to benchmark and baseline the code with specific parameter values. Train size unless otherwise documented is set to 50% and epochs are set to 250 for fast iterations.

####################################
# Example isolated repressilator
# make 'chebyshev', 'bessel', 'fibonacci', 'gegenbauer', 'hermite', 'jacobi', 'laguerre', and 'legendre' models

# repressilator polyKAN autoencoders

[DONE] python3 driver_upd.py --alpha 2 --model koopmanAE_polyKAN --basis_function laguerre --degree 4 --dataset isolated_repressilator --lr 1e-3 --epochs 250 --batch 128 --folder isolated_repr_laguerre --bottleneck 6 --backward 0 --pred_steps 100 --seed 7

[DONE] python3 driver_upd.py --alpha 2 --model koopmanAE_polyKAN --basis_function legendre --degree 4 --dataset isolated_repressilator --lr 1e-3 --epochs 250 --batch 128 --folder isolated_repr_legendre --bottleneck 6 --backward 0 --pred_steps 100 --seed 7

[DONE] python3 driver_upd.py --alpha 2 --model koopmanAE_polyKAN --basis_function fibonacci --degree 4 --dataset isolated_repressilator --lr 1e-3 --epochs 250 --batch 128 --folder isolated_repr_fibonacci --bottleneck 6 --backward 0 --pred_steps 100 --seed 7

[DONE] python3 driver_upd.py --alpha 2 --model koopmanAE_polyKAN --basis_function gegenbauer --degree 4 --dataset isolated_repressilator --lr 1e-3 --epochs 250 --batch 128 --folder isolated_repr_gegenbauer --bottleneck 6 --backward 0 --pred_steps 100 --seed 7

[DONE] python3 driver_upd.py --alpha 2 --model koopmanAE_polyKAN --basis_function jacobi --degree 4 --dataset isolated_repressilator --lr 1e-3 --epochs 250 --batch 128 --folder isolated_repr_jacobi --bottleneck 6 --backward 0 --pred_steps 100 --seed 7

[DONE] python3 driver_upd.py --alpha 2 --model koopmanAE_polyKAN --basis_function hermite --degree 4 --dataset isolated_repressilator --lr 1e-3 --epochs 250 --batch 128 --folder isolated_repr_hermite --bottleneck 6 --backward 0 --pred_steps 100 --seed 7

[DONE] python3 driver_upd.py --alpha 2 --model koopmanAE_polyKAN --basis_function bessel --degree 4 --dataset isolated_repressilator --lr 1e-3 --epochs 250 --batch 128 --folder isolated_repr_bessel --bottleneck 6 --backward 0 --pred_steps 100 --seed 7

[DONE] python3 driver_upd.py --alpha 2 --model koopmanAE_polyKAN --basis_function chebyshev --degree 4 --dataset isolated_repressilator --lr 1e-3 --epochs 250 --batch 128 --folder isolated_repr_chebyshev --bottleneck 6 --backward 0 --pred_steps 100 --seed 7

# repressilator efficientKAN b-spline autoencoder

[DONE] python3 driver_upd.py --alpha 2 --model koopmanAE_KAN --dataset isolated_repressilator --lr 1e-3 --epochs 250 --batch 128 --folder isolated_repr_eff_kan --bottleneck 6 --backward 0 --pred_steps 100 --seed 7

# repressilator mlp autoencoder

[DONE] python3 driver_upd.py --alpha 2 --model koopmanAE --dataset isolated_repressilator --lr 1e-3 --epochs 250 --batch 128 --folder isolated_repr_mlp --bottleneck 6 --backward 0 --pred_steps 100 --seed 7

####################################
# duffing oscillator polyKAN autoencoders

[DONE] python3 driver_upd.py --alpha 2 --model koopmanAE_polyKAN --basis_function laguerre --degree 4 --dataset duffing_oscillator --lr 1e-3 --epochs 250 --batch 128 --folder duffing_laguerre --bottleneck 6 --backward 0 --pred_steps 100 --seed 7

[DONE] python3 driver_upd.py --alpha 2 --model koopmanAE_polyKAN --basis_function legendre --degree 4 --dataset duffing_oscillator --lr 1e-3 --epochs 250 --batch 128 --folder duffing_legendre --bottleneck 6 --backward 0 --pred_steps 100 --seed 7

[DONE] python3 driver_upd.py --alpha 2 --model koopmanAE_polyKAN --basis_function fibonacci --degree 4 --dataset duffing_oscillator --lr 1e-3 --epochs 250 --batch 128 --folder duffing_fibonacci --bottleneck 6 --backward 0 --pred_steps 100 --seed 7

[DONE] python3 driver_upd.py --alpha 2 --model koopmanAE_polyKAN --basis_function gegenbauer --degree 4 --dataset duffing_oscillator --lr 1e-3 --epochs 250 --batch 128 --folder duffing_gegenbauer --bottleneck 6 --backward 0 --pred_steps 100 --seed 7

[DONE] python3 driver_upd.py --alpha 2 --model koopmanAE_polyKAN --basis_function jacobi --degree 4 --dataset duffing_oscillator --lr 1e-3 --epochs 250 --batch 128 --folder duffing_jacobi --bottleneck 6 --backward 0 --pred_steps 100 --seed 7

[DONE] python3 driver_upd.py --alpha 2 --model koopmanAE_polyKAN --basis_function hermite --degree 4 --dataset duffing_oscillator --lr 1e-3 --epochs 250 --batch 128 --folder duffing_hermite --bottleneck 6 --backward 0 --pred_steps 100 --seed 7

[DONE] python3 driver_upd.py --alpha 2 --model koopmanAE_polyKAN --basis_function bessel --degree 4 --dataset duffing_oscillator --lr 1e-3 --epochs 250 --batch 128 --folder duffing_bessel --bottleneck 6 --backward 0 --pred_steps 100 --seed 7

[DONE] python3 driver_upd.py --alpha 2 --model koopmanAE_polyKAN --basis_function chebyshev --degree 4 --dataset duffing_oscillator --lr 1e-3 --epochs 250 --batch 128 --folder duffing_chebyshev --bottleneck 6 --backward 0 --pred_steps 100 --seed 7

# repressilator efficientKAN b-spline autoencoder

[DONE] python3 driver_upd.py --alpha 2 --model koopmanAE_KAN --dataset duffing_oscillator --lr 1e-3 --epochs 250 --batch 128 --folder duffing_eff_kan --bottleneck 6 --backward 0 --pred_steps 100 --seed 7

# repressilator mlp autoencoder

[DONE] python3 driver_upd.py --alpha 2 --model koopmanAE --dataset duffing_oscillator --lr 1e-3 --epochs 250 --batch 128 --folder duffing_mlp --bottleneck 6 --backward 0 --pred_steps 100 --seed 7

############ 
# HOST-AWARE
python3 driver_upd.py --alpha 2 --model koopmanAE --dataset host_aware_repressilator --lr 1e-3 --epochs 10 --batch 128 --folder host_aware_repr_mlp --bottleneck 6 --backward 0 --pred_steps 2 --seed 7
